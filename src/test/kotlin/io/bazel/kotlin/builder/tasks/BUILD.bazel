# Copyright 2020 The Bazel Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("//src/test/kotlin/io/bazel/kotlin:defs.bzl", "kt_rules_test")
load("//kotlin:kotlin.bzl", "kt_jvm_test")
load("@rules_jvm_external//:defs.bzl", "artifact")

kt_rules_test(
    name = "JdepsParserTest",
    srcs = ["jvm/JdepsParserTest.java"],
    deps = [
        "//src/main/kotlin/io/bazel/kotlin/builder/tasks",
    ],
)

kt_rules_test(
    name = "KotlinWorkerTest",
    srcs = ["jvm/KotlinWorkerTest.kt"],
)

kt_rules_test(
    name = "KotlinBuilderJvmBasicTest",
    srcs = ["jvm/KotlinBuilderJvmBasicTest.java"],
    size = "large"
)

kt_jvm_test(
    name = "BazelWorkerTest",
    srcs = ["BazelWorkerTest.kt"],
    test_class = "io.bazel.kotlin.builder.tasks.BazelWorkerTest",
    deps = [
      "//src/main/kotlin/io/bazel/kotlin/builder/tasks:tasks",
      "//src/test/kotlin/io/bazel/kotlin/builder:test_lib",
      artifact("org.jetbrains.kotlinx:kotlinx-coroutines-core", repository_name="kotlin_rules_maven"),
      artifact("org.jetbrains.kotlinx:kotlinx-coroutines-test", repository_name="kotlin_rules_maven"),
      artifact("org.jetbrains.kotlinx:kotlinx-coroutines-debug", repository_name="kotlin_rules_maven"),
    ]
)


# TODO(bazelbuild/rules_kotlin/issues/275): Remove full jar reference when the kt_rules_test handles jvm_import data better.
_MAVEN_CENTRAL_PREFIX = "@kotlin_rules_maven//:v1/https/maven-central.storage.googleapis.com/repos/central/data"

_AUTO_VALUE_PREFIX = "%s/com/google/auto/value" % _MAVEN_CENTRAL_PREFIX

_AUTO_VALUE_JAR = _AUTO_VALUE_PREFIX + "/auto-value/1.6.5/auto-value-1.6.5.jar"

_AUTO_VALUE_ANNOTATIONS_JAR = _AUTO_VALUE_PREFIX + "/auto-value-annotations/1.6.5/auto-value-annotations-1.6.5.jar"

kt_rules_test(
    name = "KotlinBuilderJvmKaptTest",
    srcs = ["jvm/KotlinBuilderJvmKaptTest.java"],
    data = [
        _AUTO_VALUE_JAR,
        _AUTO_VALUE_ANNOTATIONS_JAR,
    ],
    jvm_flags = [
        "-Dauto_value=$(location %s)" % _AUTO_VALUE_JAR,
        "-Dauto_value_annotations=$(location %s)" % _AUTO_VALUE_ANNOTATIONS_JAR,
    ],
)

kt_rules_test(
    name = "KotlinBuilderJsTest",
    srcs = ["js/KotlinBuilderJsTest.java"],
)

test_suite(
    name = "tasks",
)
